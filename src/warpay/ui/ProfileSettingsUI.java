/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warpay.ui;

import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import warpay.data.AccountData;
import warpay.util.Conn;

/**
 *
 * @author irkham
 */
public class ProfileSettingsUI extends javax.swing.JPanel {

    /**
     * Creates new form ProfileSettingsUI
     */
    public ProfileSettingsUI() {
        initComponents();
        fieldEmail.setText(oldEmail);
        fieldFirstname.setText(oldFirstname);
        fieldLastname.setText(oldLastname);
        
        fieldFirstname.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });
        
        fieldLastname.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });

        fieldConfirmPass.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }

                if (fieldConfirmPass.getPassword().length >= 19) {
                    e.consume();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new warpay.swing.RoundPanel();
        main = new warpay.swing.RoundPanel();
        labelEmail = new javax.swing.JLabel();
        fieldEmail = new warpay.swing.field.TextField();
        labelFirstname = new javax.swing.JLabel();
        fieldFirstname = new warpay.swing.field.TextField();
        labelLastname = new javax.swing.JLabel();
        fieldLastname = new warpay.swing.field.TextField();
        buttonProcess = new warpay.swing.button.Button();
        labelConfirmPass = new javax.swing.JLabel();
        fieldConfirmPass = new warpay.swing.field.PasswordField();
        buttonBack = new warpay.swing.button.Button();
        iconProfile = new javax.swing.JLabel();
        title = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(650, 500));

        body.setBackground(new java.awt.Color(245, 245, 245));
        body.setPreferredSize(new java.awt.Dimension(650, 500));

        main.setBackground(new java.awt.Color(81, 203, 255));
        main.setMinimumSize(new java.awt.Dimension(70, 70));

        labelEmail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelEmail.setForeground(new java.awt.Color(38, 38, 38));
        labelEmail.setLabelFor(fieldEmail);
        labelEmail.setText("EMAIL");

        fieldEmail.setForeground(new java.awt.Color(38, 38, 38));
        fieldEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldEmail.setPreferredSize(new java.awt.Dimension(280, 50));
        fieldEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldEmailFocusLost(evt);
            }
        });

        labelFirstname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelFirstname.setForeground(new java.awt.Color(38, 38, 38));
        labelFirstname.setLabelFor(fieldFirstname);
        labelFirstname.setText("FIRST NAME");

        fieldFirstname.setForeground(new java.awt.Color(38, 38, 38));
        fieldFirstname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldFirstname.setPreferredSize(new java.awt.Dimension(280, 50));
        fieldFirstname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldFirstnameFocusLost(evt);
            }
        });

        labelLastname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelLastname.setForeground(new java.awt.Color(38, 38, 38));
        labelLastname.setLabelFor(fieldLastname);
        labelLastname.setText("LAST NAME");

        fieldLastname.setForeground(new java.awt.Color(38, 38, 38));
        fieldLastname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldLastname.setPreferredSize(new java.awt.Dimension(280, 50));
        fieldLastname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldLastnameFocusLost(evt);
            }
        });

        buttonProcess.setForeground(new java.awt.Color(38, 38, 38));
        buttonProcess.setText("SAVE");
        buttonProcess.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonProcess.setPreferredSize(new java.awt.Dimension(138, 51));
        buttonProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProcessActionPerformed(evt);
            }
        });

        labelConfirmPass.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelConfirmPass.setForeground(new java.awt.Color(38, 38, 38));
        labelConfirmPass.setText("CONFIRM PASSCODE");

        fieldConfirmPass.setForeground(new java.awt.Color(38, 38, 38));
        fieldConfirmPass.setEchoChar('\u2022');
        fieldConfirmPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldConfirmPass.setPreferredSize(new java.awt.Dimension(280, 50));

        buttonBack.setForeground(new java.awt.Color(38, 38, 38));
        buttonBack.setText("BACK");
        buttonBack.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonBack.setPreferredSize(new java.awt.Dimension(138, 51));
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(buttonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelFirstname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelLastname, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                        .addComponent(labelEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelConfirmPass))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldConfirmPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(154, 154, 154))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmail))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFirstname))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLastname))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelConfirmPass)
                    .addComponent(fieldConfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        iconProfile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        iconProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/profile_setting_black.png"))); // NOI18N

        title.setBackground(new java.awt.Color(38, 38, 38));
        title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(38, 38, 38));
        title.setText("PROFILE SETTINGS");
        title.setPreferredSize(new java.awt.Dimension(161, 24));

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(417, 417, 417)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(iconProfile)
                .addGap(12, 12, 12))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconProfile))
                .addGap(12, 12, 12)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fieldEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldEmailFocusLost
        if (fieldEmail.getText().trim().isEmpty()) {
            fieldEmail.setText(oldEmail);
        }
    }//GEN-LAST:event_fieldEmailFocusLost

    private void fieldFirstnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldFirstnameFocusLost
        if (fieldFirstname.getText().trim().isEmpty()) {
            fieldFirstname.setText(oldFirstname);
        }
    }//GEN-LAST:event_fieldFirstnameFocusLost

    private void fieldLastnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLastnameFocusLost
        if (fieldLastname.getText().trim().isEmpty()) {
            fieldLastname.setText(oldLastname);
        }
    }//GEN-LAST:event_fieldLastnameFocusLost

    private void buttonProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProcessActionPerformed
        String email = fieldEmail.getText().trim().toLowerCase();
        String fname = fieldFirstname.getText().trim().toUpperCase();
        String lname = fieldLastname.getText().trim().toUpperCase();
        String pass = String.valueOf(fieldConfirmPass.getPassword()).trim();

        if (!validateInput(email, fname, lname, pass)) {
            return;
        }

        if (!isDataDifferent(email, fname, lname)) {
            return;
        }

        if (!isPassCorrect(pass)) {
            return;
        }

        if (!isConfirmed()) {
            return;
        }

        try {
            PreparedStatement pst = Conn.getConnection().prepareStatement("UPDATE customers SET first_name = ?, last_name = ?, email = ? WHERE customer_id = ?");

            pst.setString(1, fname);
            pst.setString(2, lname);
            pst.setString(3, email);
            pst.setInt(4, AccountData.getInstance().getCustomerId());

            int res = pst.executeUpdate();
            if (res == 1) {
                AccountData.getInstance().setEmail(email);
                AccountData.getInstance().setFirstname(fname);
                AccountData.getInstance().setFullname(fname + " " + lname);
                AccountData.getInstance().setLastname(lname);

                JOptionPane.showMessageDialog(null, "Profile has been updated succesfully!");
                ProfileUI.setProfile();
                showCurrentData();
                fieldConfirmPass.setText("");
            }
        } catch (SQLException | HeadlessException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null,
                    e.getMessage(), "Error",
                    JOptionPane.INFORMATION_MESSAGE
            );
            System.exit(0);
        }
    }//GEN-LAST:event_buttonProcessActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        ProfileUI.showCard(ProfileUI.MENUPANEL);
    }//GEN-LAST:event_buttonBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private warpay.swing.RoundPanel body;
    private warpay.swing.button.Button buttonBack;
    private warpay.swing.button.Button buttonProcess;
    private warpay.swing.field.PasswordField fieldConfirmPass;
    private warpay.swing.field.TextField fieldEmail;
    private warpay.swing.field.TextField fieldFirstname;
    private warpay.swing.field.TextField fieldLastname;
    private javax.swing.JLabel iconProfile;
    private javax.swing.JLabel labelConfirmPass;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelFirstname;
    private javax.swing.JLabel labelLastname;
    private warpay.swing.RoundPanel main;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private String oldEmail = AccountData.getInstance().getEmail();
    private String oldFirstname = AccountData.getInstance().getFirstname();
    private String oldLastname = AccountData.getInstance().getLastname();

    private void showCurrentData() {
        oldEmail = AccountData.getInstance().getEmail();
        oldFirstname = AccountData.getInstance().getFirstname();
        oldLastname = AccountData.getInstance().getLastname();

        fieldEmail.setText(oldEmail);
        fieldFirstname.setText(oldFirstname);
        fieldLastname.setText(oldLastname);
    }

    private boolean validateInput(String email, String firstname, String lastname, String pass) {
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your email.");
            fieldEmail.requestFocusInWindow();
            return false;
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid email.");
            return false;
        }

        if (firstname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your first name.");
            fieldFirstname.requestFocusInWindow();
            return false;
        }

        if (firstname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your last name.");
            fieldLastname.requestFocusInWindow();
            return false;
        }

        if (pass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your passcode.");
            fieldConfirmPass.requestFocusInWindow();
            return false;
        }

        return true;
    }

    private boolean isDataDifferent(String email, String firstname, String lastname) {
        return !email.equals(oldEmail) || !firstname.equals(oldFirstname) || !lastname.equals(oldLastname);
    }

    private boolean isPassCorrect(String pass) {
        try (PreparedStatement pst = Conn.getConnection().prepareStatement("SELECT * FROM account_customers WHERE account_id = ? AND customer_id = ? AND passcode = MD5(?)")) {
            pst.setInt(1, AccountData.getInstance().getAccountId());
            pst.setInt(2, AccountData.getInstance().getCustomerId());
            pst.setString(3, pass);

            ResultSet res = pst.executeQuery();
            if (res.next()) {
                return true;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Your passcode are incorrect, please check it carefully");
        }
        return false;
    }

    private boolean isConfirmed() {
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure want to change your profile info?", "Change Profile", JOptionPane.YES_NO_OPTION);
        return opt == JOptionPane.YES_OPTION;
    }
}
