/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warpay.ui;

import java.awt.Cursor;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.JOptionPane;
import warpay.util.Conn;
import warpay.util.Extension;

/**
 *
 * @author irkham
 */
public class SignUpUI extends javax.swing.JFrame {

    /**
     * Creates new form SignUpUI
     */
    public SignUpUI() {
        setUndecorated(true);
        initComponents();
        initPlaceholder();
        initConnection();

        fieldFname.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });
        
        fieldLname.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });
        
        fieldPass.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }

                if (fieldPass.getPassword().length >= 19) {
                    e.consume();
                }
            }
        });

    }

    private void initPlaceholder() {
        Extension.addPlaceholderStyle(fieldEmail);
        Extension.addPlaceholderStyle(fieldFname);
        Extension.addPlaceholderStyle(fieldLname);
        Extension.addPlaceholderStyle(fieldPass);
    }

    Connection conn = null;

    private void initConnection() {
        conn = Conn.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        roundPanel = new warpay.swing.RoundPanel();
        header = new warpay.swing.RoundPanel();
        tagLine = new javax.swing.JLabel();
        main = new warpay.swing.RoundPanel();
        labelEmail = new javax.swing.JLabel();
        fieldEmail = new warpay.swing.field.TextField();
        labelFname = new javax.swing.JLabel();
        fieldFname = new warpay.swing.field.TextField();
        labelLname = new javax.swing.JLabel();
        fieldLname = new warpay.swing.field.TextField();
        labelPass = new javax.swing.JLabel();
        fieldPass = new warpay.swing.field.PasswordField();
        buttonCancel = new warpay.swing.button.Button();
        buttonSignUp = new warpay.swing.button.Button();
        footer = new warpay.swing.RoundPanel();
        labelFooter = new javax.swing.JLabel();
        buttonLogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Signup");
        setBackground(new java.awt.Color(1.0f, 1.0f, 1.0f, 0.0f)
        );
        setIconImage(Extension.getFrameIcon(getClass().getResource("/assets/image/warpay.png")));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(352, 486));
        setResizable(false);

        contentPane.setBackground(new java.awt.Color(1.0f, 1.0f, 1.0f, 0.0f));
        contentPane.setPreferredSize(getPreferredSize());
        contentPane.setLayout(null);

        roundPanel.setBackground(new java.awt.Color(254, 254, 254));
        roundPanel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        header.setBackground(new java.awt.Color(81, 203, 255));

        tagLine.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tagLine.setForeground(new java.awt.Color(255, 255, 255));
        tagLine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tagLine.setText("WARPAY");
        tagLine.setPreferredSize(new java.awt.Dimension(294, 20));

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tagLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tagLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        main.setBackground(new java.awt.Color(81, 203, 255));
        main.setPreferredSize(new java.awt.Dimension(328, 350));

        labelEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelEmail.setForeground(new java.awt.Color(255, 255, 255));
        labelEmail.setText("Email");

        fieldEmail.setText(Text.EMAIL);
        fieldEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldEmail.setPreferredSize(new java.awt.Dimension(200, 41));
        fieldEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldEmailFocusLost(evt);
            }
        });

        labelFname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelFname.setForeground(new java.awt.Color(255, 255, 255));
        labelFname.setText("First Name");

        fieldFname.setText(Text.FNAME);
        fieldFname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldFname.setPreferredSize(new java.awt.Dimension(200, 41));
        fieldFname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldFnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldFnameFocusLost(evt);
            }
        });

        labelLname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelLname.setForeground(new java.awt.Color(255, 255, 255));
        labelLname.setText("Last Name");

        fieldLname.setText(Text.LNAME);
        fieldLname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldLname.setPreferredSize(new java.awt.Dimension(200, 41));
        fieldLname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldLnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldLnameFocusLost(evt);
            }
        });

        labelPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelPass.setForeground(new java.awt.Color(255, 255, 255));
        labelPass.setText("Passcode");

        fieldPass.setText(Text.PASS);
        fieldPass.setEchoChar('\u0000');
        fieldPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fieldPass.setPreferredSize(new java.awt.Dimension(200, 41));
        fieldPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldPassFocusLost(evt);
            }
        });
        fieldPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldPassKeyReleased(evt);
            }
        });

        buttonCancel.setBackground(new java.awt.Color(0, 150, 255));
        buttonCancel.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancel.setText(Text.CANCEL);
        buttonCancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buttonCancel.setPreferredSize(new java.awt.Dimension(91, 40));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonSignUp.setBackground(new java.awt.Color(0, 150, 255));
        buttonSignUp.setForeground(new java.awt.Color(255, 255, 255));
        buttonSignUp.setText(Text.SIGNUP);
        buttonSignUp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buttonSignUp.setPreferredSize(new java.awt.Dimension(91, 40));
        buttonSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSignUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPass)
                            .addComponent(labelEmail)
                            .addComponent(labelLname)
                            .addComponent(labelFname)))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fieldPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(mainLayout.createSequentialGroup()
                                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(fieldLname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldFname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelEmail)
                .addGap(0, 0, 0)
                .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(labelFname)
                .addGap(0, 0, 0)
                .addComponent(fieldFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(labelLname)
                .addGap(0, 0, 0)
                .addComponent(fieldLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(labelPass)
                .addGap(0, 0, 0)
                .addComponent(fieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        footer.setBackground(new java.awt.Color(81, 203, 255));

        labelFooter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelFooter.setForeground(new java.awt.Color(255, 255, 255));
        labelFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFooter.setText("Have an account?");

        buttonLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buttonLogin.setText(Text.LOGIN);
        buttonLogin.setPreferredSize(new java.awt.Dimension(35, 20));
        buttonLogin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonLoginMouseMoved(evt);
            }
        });
        buttonLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonLoginMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(labelFooter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelFooter)
                    .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout roundPanelLayout = new javax.swing.GroupLayout(roundPanel);
        roundPanel.setLayout(roundPanelLayout);
        roundPanelLayout.setHorizontalGroup(
            roundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(roundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(footer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        roundPanelLayout.setVerticalGroup(
            roundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        contentPane.add(roundPanel);
        roundPanel.setBounds(0, 0, 352, 486);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(352, 486));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fieldEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldEmailFocusGained
        if (fieldEmail.getText().equalsIgnoreCase(Text.EMAIL)) {
            fieldEmail.setText("");
            fieldEmail.requestFocus();
            Extension.removePlaceholderStyle(fieldEmail);
        }
    }//GEN-LAST:event_fieldEmailFocusGained

    private void fieldEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldEmailFocusLost
        if (fieldEmail.getText().trim().isEmpty()) {
            Extension.addPlaceholderStyle(fieldEmail);
            fieldEmail.setText(Text.EMAIL);
        }
    }//GEN-LAST:event_fieldEmailFocusLost

    private void fieldPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPassFocusGained
        String pass = String.valueOf(fieldPass.getPassword());
        if (pass.equalsIgnoreCase(Text.PASS)) {
            fieldPass.setText("");
            fieldPass.requestFocus();
            fieldPass.setEchoChar('\u2022');
            Extension.removePlaceholderStyle(fieldPass);
        }
    }//GEN-LAST:event_fieldPassFocusGained

    private void fieldPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPassFocusLost
        if (fieldPass.getPassword().length == 0) {
            Extension.addPlaceholderStyle(fieldPass);
            fieldPass.setText(Text.PASS);
            fieldPass.setEchoChar('\u0000');
        }
    }//GEN-LAST:event_fieldPassFocusLost

    private void fieldPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldPassKeyReleased
        String pass = String.valueOf(fieldPass.getPassword());
        if (pass.trim().isEmpty() || pass.equalsIgnoreCase(Text.PASS)) {
            fieldPass.setShowAndHide(false);
        } else {
            fieldPass.setShowAndHide(true);
        }
    }//GEN-LAST:event_fieldPassKeyReleased

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSignUpActionPerformed
        registerUser();
    }//GEN-LAST:event_buttonSignUpActionPerformed

    private void fieldLnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLnameFocusGained
        if (fieldLname.getText().trim().equalsIgnoreCase(Text.LNAME)) {
            fieldLname.setText("");
            fieldLname.requestFocus();
            Extension.removePlaceholderStyle(fieldLname);
        }
    }//GEN-LAST:event_fieldLnameFocusGained

    private void fieldLnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLnameFocusLost
        if (fieldLname.getText().trim().isEmpty()) {
            Extension.addPlaceholderStyle(fieldLname);
            fieldLname.setText(Text.LNAME);
        }
    }//GEN-LAST:event_fieldLnameFocusLost

    private void fieldFnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldFnameFocusGained
        if (fieldFname.getText().trim().equalsIgnoreCase(Text.FNAME)) {
            fieldFname.setText("");
            fieldFname.requestFocus();
            Extension.removePlaceholderStyle(fieldFname);
        }
    }//GEN-LAST:event_fieldFnameFocusGained

    private void fieldFnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldFnameFocusLost
        if (fieldFname.getText().trim().isEmpty()) {
            Extension.addPlaceholderStyle(fieldFname);
            fieldFname.setText(Text.FNAME);
        }
    }//GEN-LAST:event_fieldFnameFocusLost

    private void buttonLoginMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLoginMouseMoved
        buttonLogin.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_buttonLoginMouseMoved

    private void buttonLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLoginMouseClicked
        dispose();
        java.awt.EventQueue.invokeLater(() -> {
            new LoginUI().setVisible(true);
        });
    }//GEN-LAST:event_buttonLoginMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SignUpUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private warpay.swing.button.Button buttonCancel;
    private javax.swing.JLabel buttonLogin;
    private warpay.swing.button.Button buttonSignUp;
    private javax.swing.JPanel contentPane;
    private warpay.swing.field.TextField fieldEmail;
    private warpay.swing.field.TextField fieldFname;
    private warpay.swing.field.TextField fieldLname;
    private warpay.swing.field.PasswordField fieldPass;
    private warpay.swing.RoundPanel footer;
    private warpay.swing.RoundPanel header;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelFname;
    private javax.swing.JLabel labelFooter;
    private javax.swing.JLabel labelLname;
    private javax.swing.JLabel labelPass;
    private warpay.swing.RoundPanel main;
    private warpay.swing.RoundPanel roundPanel;
    private javax.swing.JLabel tagLine;
    // End of variables declaration//GEN-END:variables

    private boolean isInputValid(String email, String firstname, String lastname, String pass) {
        if (email.isEmpty() || email.equalsIgnoreCase(Text.EMAIL)) {
            JOptionPane.showMessageDialog(null, "Please enter your email.");
            fieldEmail.requestFocusInWindow();
            return false;
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid email");
            fieldEmail.requestFocusInWindow();
            return false;
        }

        if (firstname.isEmpty() || firstname.equalsIgnoreCase(Text.FNAME)) {
            JOptionPane.showMessageDialog(null, "Please enter your first name");
            fieldFname.requestFocusInWindow();
            return false;
        }

        if (lastname.isEmpty() || lastname.equalsIgnoreCase(Text.LNAME)) {
            JOptionPane.showMessageDialog(null, "Please enter your last name");
            fieldLname.requestFocusInWindow();
            return false;
        }

        if (pass.isEmpty() || pass.equalsIgnoreCase(Text.PASS)) {
            JOptionPane.showMessageDialog(null, "Please enter a passcode for your future account");
            fieldPass.requestFocusInWindow();
            return false;
        }

        return true;
    }

    private void registerUser() {
        String email = fieldEmail.getText().trim().toLowerCase();
        String fname = fieldFname.getText().trim().toUpperCase();
        String lname = fieldLname.getText().trim().toUpperCase();
        String pass = String.valueOf(fieldPass.getPassword()).trim();
        double initialBalance = 0.0;

        if (!isInputValid(email, fname, lname, pass)) {
            return;
        }

        try {
            String localDate = java.time.LocalDate.now().toString();
            java.util.Date date = new java.text.SimpleDateFormat("yyyy-MM-dd").parse(localDate);
            java.sql.Date currentDate = new java.sql.Date(date.getTime());

            if (isEmailAlreadyUsed(email)) {
                JOptionPane.showMessageDialog(null,
                        "Email is already registered for different user."
                );
            } else {
                PreparedStatement st = conn.prepareStatement("INSERT INTO customers (first_name, last_name, email) VALUES (?, ?, ?)", Statement.RETURN_GENERATED_KEYS);

                st.setString(1, fname);
                st.setString(2, lname);
                st.setString(3, email);

                st.executeUpdate();

                try (ResultSet cust = st.getGeneratedKeys()) {
                    if (cust.next()) {
                        int custid = cust.getInt(1);

                        st = conn.prepareStatement("INSERT INTO accounts (account_balance, date_opened) VALUES (?, ?)", Statement.RETURN_GENERATED_KEYS);

                        st.setDouble(1, initialBalance);
                        st.setDate(2, currentDate);

                        st.executeUpdate();

                        try (ResultSet acc = st.getGeneratedKeys()) {
                            if (acc.next()) {
                                int accid = acc.getInt(1);

                                st = conn.prepareStatement("INSERT INTO account_customers (account_id, customer_id, passcode) VALUES (?, ?, MD5(?))");

                                st.setInt(1, accid);
                                st.setInt(2, custid);
                                st.setString(3, pass);

                                int affectedRows = st.executeUpdate();

                                if (affectedRows == 1) {
                                    String msg = "User successfully registered with user id : " + accid + "\n\nPlease remember the user id given above as it would used for login to your account";
                                    JOptionPane.showMessageDialog(null, msg);
                                    java.awt.EventQueue.invokeLater(() -> {
                                        dispose();
                                        new LoginUI().setVisible(true);
                                    });
                                }
                            }
                        }
                    }
                }
            }
        } catch (ParseException | SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null,
                    e.getMessage(), "Error",
                    JOptionPane.INFORMATION_MESSAGE
            );
            System.exit(0);
        }
    }

    private boolean isEmailAlreadyUsed(String email) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("SELECT email FROM customers WHERE email = ?");

        pst.setString(1, email);

        ResultSet rs = pst.executeQuery();
        return rs.next();
    }
}
