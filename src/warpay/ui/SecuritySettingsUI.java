/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warpay.ui;

import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import warpay.data.AccountData;
import warpay.util.Conn;

/**
 *
 * @author irkham
 */
public class SecuritySettingsUI extends javax.swing.JPanel {

    /**
     * Creates new form SecuritySettingsUI
     */
    public SecuritySettingsUI() {
        initComponents();

        fieldOldPass.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }

                if (fieldOldPass.getPassword().length >= 19) {
                    e.consume();
                }
            }
        });

        fieldNewPass.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }

                if (fieldNewPass.getPassword().length >= 19) {
                    e.consume();
                }
            }
        });

        fieldConfirmPass.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume();
                }

                if (fieldConfirmPass.getPassword().length >= 19) {
                    e.consume();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new warpay.swing.RoundPanel();
        main = new warpay.swing.RoundPanel();
        labelOldPass = new javax.swing.JLabel();
        fieldOldPass = new warpay.swing.field.PasswordField();
        labelNewPass = new javax.swing.JLabel();
        fieldNewPass = new warpay.swing.field.PasswordField();
        labelConfirmPass = new javax.swing.JLabel();
        fieldConfirmPass = new warpay.swing.field.PasswordField();
        buttonProcess = new warpay.swing.button.Button();
        buttonBack = new warpay.swing.button.Button();
        iconSecurity = new javax.swing.JLabel();
        title = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(650, 500));

        body.setBackground(new java.awt.Color(245, 245, 245));
        body.setPreferredSize(new java.awt.Dimension(650, 500));

        main.setBackground(new java.awt.Color(81, 203, 255));
        main.setMinimumSize(new java.awt.Dimension(70, 70));

        labelOldPass.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelOldPass.setForeground(new java.awt.Color(38, 38, 38));
        labelOldPass.setLabelFor(fieldOldPass);
        labelOldPass.setText("OLD PASSCODE");

        fieldOldPass.setForeground(new java.awt.Color(38, 38, 38));
        fieldOldPass.setEchoChar('\u2022');
        fieldOldPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldOldPass.setPreferredSize(new java.awt.Dimension(280, 50));

        labelNewPass.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelNewPass.setForeground(new java.awt.Color(38, 38, 38));
        labelNewPass.setLabelFor(fieldNewPass);
        labelNewPass.setText("NEW PASSCODE");

        fieldNewPass.setForeground(new java.awt.Color(38, 38, 38));
        fieldNewPass.setEchoChar('\u2022');
        fieldNewPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldNewPass.setPreferredSize(new java.awt.Dimension(280, 50));

        labelConfirmPass.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelConfirmPass.setForeground(new java.awt.Color(38, 38, 38));
        labelConfirmPass.setLabelFor(fieldConfirmPass);
        labelConfirmPass.setText("CONFIRM PASSCODE");

        fieldConfirmPass.setForeground(new java.awt.Color(38, 38, 38));
        fieldConfirmPass.setEchoChar('\u2022');
        fieldConfirmPass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fieldConfirmPass.setPreferredSize(new java.awt.Dimension(280, 50));

        buttonProcess.setForeground(new java.awt.Color(38, 38, 38));
        buttonProcess.setText("SAVE");
        buttonProcess.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonProcess.setPreferredSize(new java.awt.Dimension(138, 51));
        buttonProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProcessActionPerformed(evt);
            }
        });

        buttonBack.setForeground(new java.awt.Color(38, 38, 38));
        buttonBack.setText("BACK");
        buttonBack.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonBack.setPreferredSize(new java.awt.Dimension(138, 51));
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(buttonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                        .addComponent(labelConfirmPass)
                        .addGap(24, 24, 24)
                        .addComponent(fieldConfirmPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(mainLayout.createSequentialGroup()
                            .addComponent(labelNewPass)
                            .addGap(65, 65, 65)
                            .addComponent(fieldNewPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainLayout.createSequentialGroup()
                            .addComponent(labelOldPass)
                            .addGap(71, 71, 71)
                            .addComponent(fieldOldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(154, 154, 154))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOldPass)
                    .addComponent(fieldOldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewPass)
                    .addComponent(fieldNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldConfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelConfirmPass))
                .addGap(107, 107, 107)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        iconSecurity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        iconSecurity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/security_setting_black.png"))); // NOI18N

        title.setBackground(new java.awt.Color(38, 38, 38));
        title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(38, 38, 38));
        title.setText("SECURITY SETTINGS");
        title.setPreferredSize(new java.awt.Dimension(174, 24));

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(iconSecurity)
                .addGap(12, 12, 12))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconSecurity))
                .addGap(12, 12, 12)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProcessActionPerformed
        String oldPass = String.valueOf(fieldOldPass.getPassword()).trim();
        String newPass = String.valueOf(fieldNewPass.getPassword()).trim();
        String confirmPass = String.valueOf(fieldConfirmPass.getPassword()).trim();

        if (!isInputValid(oldPass, newPass, confirmPass)) {
            return;
        }

        if (!isPassCorrect(oldPass)) {
            return;
        }

        if (!newPass.equals(confirmPass)) {
            JOptionPane.showMessageDialog(null, "Your new passcode doesn't match");
            return;
        }

        if (newPass.equals(oldPass)) {
            JOptionPane.showMessageDialog(null, "Passcode will not changed as new passcode is equals to current passcode");
            return;
        }

        if (!isConfirmed()) {
            return;
        }

        try {
            PreparedStatement pst = Conn.getConnection().prepareStatement("UPDATE account_customers SET passcode = MD5(?) WHERE account_id = ? AND customer_id = ?");

            pst.setString(1, newPass);
            pst.setInt(2, AccountData.getInstance().getAccountId());
            pst.setInt(3, AccountData.getInstance().getCustomerId());

            int res = pst.executeUpdate();
            if (res == 1) {
                pst = Conn.getConnection().prepareStatement("SELECT * FROM account_customers WHERE account_id = ? AND customer_id = ? AND passcode = MD5(?)");

                pst.setInt(1, AccountData.getInstance().getAccountId());
                pst.setInt(2, AccountData.getInstance().getCustomerId());
                pst.setString(3, newPass);

                ResultSet rst = pst.executeQuery();
                if (rst.next()) {
                    AccountData.getInstance().setPasscode(rst.getString(3));

                    JOptionPane.showMessageDialog(null, "Passcode has been changed succesfully");

                    fieldOldPass.setText("");
                    fieldNewPass.setText("");
                    fieldConfirmPass.setText("");
                }
            }
        } catch (SQLException | HeadlessException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null,
                    e.getMessage(), "Error",
                    JOptionPane.INFORMATION_MESSAGE
            );
            System.exit(0);
        }
    }//GEN-LAST:event_buttonProcessActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        ProfileUI.showCard(ProfileUI.MENUPANEL);
    }//GEN-LAST:event_buttonBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private warpay.swing.RoundPanel body;
    private warpay.swing.button.Button buttonBack;
    private warpay.swing.button.Button buttonProcess;
    private warpay.swing.field.PasswordField fieldConfirmPass;
    private warpay.swing.field.PasswordField fieldNewPass;
    private warpay.swing.field.PasswordField fieldOldPass;
    private javax.swing.JLabel iconSecurity;
    private javax.swing.JLabel labelConfirmPass;
    private javax.swing.JLabel labelNewPass;
    private javax.swing.JLabel labelOldPass;
    private warpay.swing.RoundPanel main;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private boolean isInputValid(String oldpass, String newpass, String confirmpass) {
        if (oldpass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your current passcode.");
            fieldOldPass.requestFocusInWindow();
            return false;
        }

        if (newpass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your new passcode.");
            fieldNewPass.requestFocusInWindow();
            return false;
        }

        if (confirmpass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please confirm your new passcode.");
            fieldConfirmPass.requestFocusInWindow();
            return false;
        }

        return true;
    }

    private boolean isPassCorrect(String pass) {
        try (PreparedStatement pst = Conn.getConnection().prepareStatement("SELECT * FROM account_customers WHERE account_id = ? AND customer_id = ? AND passcode = MD5(?)")) {
            pst.setInt(1, AccountData.getInstance().getAccountId());
            pst.setInt(2, AccountData.getInstance().getCustomerId());
            pst.setString(3, pass);

            ResultSet res = pst.executeQuery();
            if (res.next()) {
                return true;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Your passcode are incorrect, please check it carefully");
            fieldOldPass.requestFocusInWindow();
        }
        return false;
    }

    private boolean isConfirmed() {
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure want to change your passcode?", "Change Pass", JOptionPane.YES_NO_OPTION);
        return opt == JOptionPane.YES_OPTION;
    }
}
