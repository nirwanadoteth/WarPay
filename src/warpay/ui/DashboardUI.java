/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warpay.ui;

import java.awt.Color;
import java.io.IOException;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import warpay.data.AccountData;
import warpay.util.Conn;

/**
 *
 * @author irkham
 */
public class DashboardUI extends javax.swing.JPanel {

    /**
     * Creates new form DashboardUI
     */
    public DashboardUI() {
        initComponents();
        showNoHistory();
        showTransactionHistory();
        setInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundPanel1 = new warpay.swing.RoundPanel();
        head = new warpay.swing.RoundPanel();
        title = new javax.swing.JLabel();
        contentHead = new warpay.swing.RoundPanel();
        labelSend = new javax.swing.JLabel();
        labelWd = new javax.swing.JLabel();
        labelTopup = new javax.swing.JLabel();
        buttonSend = new warpay.swing.button.Button();
        buttonTopup = new warpay.swing.button.Button();
        buttonWithdraw = new warpay.swing.button.Button();
        body = new warpay.swing.RoundPanel();
        jLabel8 = new javax.swing.JLabel();
        roundPanel7 = new warpay.swing.RoundPanel();
        histpanel1 = new warpay.swing.RoundPanel();
        histicon1 = new javax.swing.JLabel();
        histpanel2 = new warpay.swing.RoundPanel();
        histicon2 = new javax.swing.JLabel();
        histpanel3 = new warpay.swing.RoundPanel();
        histicon3 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        am1 = new javax.swing.JLabel();
        date2 = new javax.swing.JLabel();
        am2 = new javax.swing.JLabel();
        date3 = new javax.swing.JLabel();
        am3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(650, 580));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(650, 580));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        roundPanel1.setBackground(new java.awt.Color(0, 0, 0));
        roundPanel1.setPreferredSize(new java.awt.Dimension(650, 580));

        head.setBackground(new java.awt.Color(50, 50, 50));

        title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("DASHBOARD");

        contentHead.setBackground(new java.awt.Color(81, 203, 255));

        labelSend.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelSend.setForeground(new java.awt.Color(255, 255, 255));
        labelSend.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSend.setText(" SEND");
        labelSend.setPreferredSize(new java.awt.Dimension(106, 25));

        labelWd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelWd.setForeground(new java.awt.Color(255, 255, 255));
        labelWd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelWd.setText("WITHDRAW");
        labelWd.setPreferredSize(new java.awt.Dimension(106, 25));

        labelTopup.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTopup.setForeground(new java.awt.Color(255, 255, 255));
        labelTopup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTopup.setText("TOP UP");
        labelTopup.setPreferredSize(new java.awt.Dimension(106, 25));

        buttonSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/send.png"))); // NOI18N
        buttonSend.setPreferredSize(new java.awt.Dimension(80, 80));
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        buttonTopup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/topup.png"))); // NOI18N
        buttonTopup.setPreferredSize(new java.awt.Dimension(80, 80));
        buttonTopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopupActionPerformed(evt);
            }
        });

        buttonWithdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/wd.png"))); // NOI18N
        buttonWithdraw.setPreferredSize(new java.awt.Dimension(80, 80));
        buttonWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWithdrawActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentHeadLayout = new javax.swing.GroupLayout(contentHead);
        contentHead.setLayout(contentHeadLayout);
        contentHeadLayout.setHorizontalGroup(
            contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentHeadLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(buttonSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelWd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelTopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
        );
        contentHeadLayout.setVerticalGroup(
            contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentHeadLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(contentHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(contentHeadLayout.createSequentialGroup()
                        .addComponent(buttonTopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(labelTopup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentHeadLayout.createSequentialGroup()
                        .addComponent(buttonWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(labelWd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentHeadLayout.createSequentialGroup()
                        .addComponent(buttonSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(labelSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout headLayout = new javax.swing.GroupLayout(head);
        head.setLayout(headLayout);
        headLayout.setHorizontalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(contentHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        headLayout.setVerticalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(title)
                .addGap(12, 12, 12)
                .addComponent(contentHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        body.setBackground(new java.awt.Color(50, 50, 50));

        jLabel8.setFont(title.getFont());
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("LAST TRANSACTION");

        roundPanel7.setBackground(new java.awt.Color(81, 203, 255));
        roundPanel7.setPreferredSize(new java.awt.Dimension(626, 262));

        histpanel1.setBackground(new java.awt.Color(81, 203, 255));
        histpanel1.setMinimumSize(new java.awt.Dimension(70, 70));
        histpanel1.setPreferredSize(new java.awt.Dimension(64, 64));

        histicon1.setPreferredSize(new java.awt.Dimension(48, 48));

        javax.swing.GroupLayout histpanel1Layout = new javax.swing.GroupLayout(histpanel1);
        histpanel1.setLayout(histpanel1Layout);
        histpanel1Layout.setHorizontalGroup(
            histpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, histpanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        histpanel1Layout.setVerticalGroup(
            histpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(histpanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        histpanel2.setBackground(new java.awt.Color(81, 203, 255));
        histpanel2.setMinimumSize(new java.awt.Dimension(70, 70));
        histpanel2.setPreferredSize(new java.awt.Dimension(64, 64));

        histicon2.setPreferredSize(new java.awt.Dimension(48, 48));

        javax.swing.GroupLayout histpanel2Layout = new javax.swing.GroupLayout(histpanel2);
        histpanel2.setLayout(histpanel2Layout);
        histpanel2Layout.setHorizontalGroup(
            histpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, histpanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        histpanel2Layout.setVerticalGroup(
            histpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(histpanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        histpanel3.setBackground(new java.awt.Color(81, 203, 255));
        histpanel3.setMinimumSize(new java.awt.Dimension(70, 70));
        histpanel3.setPreferredSize(new java.awt.Dimension(64, 64));

        histicon3.setPreferredSize(new java.awt.Dimension(48, 48));

        javax.swing.GroupLayout histpanel3Layout = new javax.swing.GroupLayout(histpanel3);
        histpanel3.setLayout(histpanel3Layout);
        histpanel3Layout.setHorizontalGroup(
            histpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, histpanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        histpanel3Layout.setVerticalGroup(
            histpanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(histpanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(histicon3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        date1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        date1.setForeground(new java.awt.Color(255, 255, 255));
        date1.setMinimumSize(new java.awt.Dimension(62, 25));
        date1.setPreferredSize(new java.awt.Dimension(120, 25));

        am1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        am1.setForeground(new java.awt.Color(255, 255, 255));
        am1.setPreferredSize(new java.awt.Dimension(418, 25));

        date2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        date2.setForeground(new java.awt.Color(255, 255, 255));
        date2.setPreferredSize(new java.awt.Dimension(120, 25));

        am2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        am2.setForeground(new java.awt.Color(255, 255, 255));
        am2.setPreferredSize(new java.awt.Dimension(418, 25));

        date3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        date3.setForeground(new java.awt.Color(255, 255, 255));
        date3.setPreferredSize(new java.awt.Dimension(120, 25));

        am3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        am3.setForeground(new java.awt.Color(255, 255, 255));
        am3.setPreferredSize(new java.awt.Dimension(418, 25));

        javax.swing.GroupLayout roundPanel7Layout = new javax.swing.GroupLayout(roundPanel7);
        roundPanel7.setLayout(roundPanel7Layout);
        roundPanel7Layout.setHorizontalGroup(
            roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel7Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(histpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(histpanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(histpanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(am3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(am2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(am1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        roundPanel7Layout.setVerticalGroup(
            roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(histpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(am1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(am2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(histpanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(roundPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(am3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(histpanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addGap(405, 405, 405))
            .addComponent(roundPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addGap(12, 12, 12)
                .addComponent(roundPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(head, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        this.requestFocusInWindow();
        showTransactionHistory();
    }//GEN-LAST:event_formFocusGained

    private void buttonWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWithdrawActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            WithdrawUI wdUI = new WithdrawUI();
            wdUI.setVisible(true);
        });
    }//GEN-LAST:event_buttonWithdrawActionPerformed

    private void buttonTopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopupActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            DepositUI depoUI = new DepositUI();
            depoUI.setVisible(true);
        });
    }//GEN-LAST:event_buttonTopupActionPerformed

    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            TransferUI transferUI = new TransferUI();
            transferUI.setVisible(true);
        });
    }//GEN-LAST:event_buttonSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    static javax.swing.JLabel am1;
    static javax.swing.JLabel am2;
    static javax.swing.JLabel am3;
    private warpay.swing.RoundPanel body;
    private warpay.swing.button.Button buttonSend;
    private warpay.swing.button.Button buttonTopup;
    private warpay.swing.button.Button buttonWithdraw;
    private warpay.swing.RoundPanel contentHead;
    static javax.swing.JLabel date1;
    static javax.swing.JLabel date2;
    static javax.swing.JLabel date3;
    private warpay.swing.RoundPanel head;
    static javax.swing.JLabel histicon1;
    static javax.swing.JLabel histicon2;
    static javax.swing.JLabel histicon3;
    static warpay.swing.RoundPanel histpanel1;
    static warpay.swing.RoundPanel histpanel2;
    static warpay.swing.RoundPanel histpanel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel labelSend;
    private javax.swing.JLabel labelTopup;
    private javax.swing.JLabel labelWd;
    private warpay.swing.RoundPanel roundPanel1;
    private warpay.swing.RoundPanel roundPanel7;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private static DashboardUI instance = null;

    private void setInstance() {
        instance = this;
    }

    public static DashboardUI getInstance() {
        return instance;
    }

    static void showTransactionHistory() {
        try {
            PreparedStatement pst = Conn.getConnection().prepareStatement("SELECT transaction_id, date, amount FROM transactions WHERE customer_id = ? ORDER BY transaction_id DESC LIMIT 0, 3");
            String[] date = new String[3];
            double[] amount = new double[3];
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            pst.setInt(1, AccountData.getInstance().getCustomerId());

            ResultSet res = pst.executeQuery();
            for (int i = 0; i < 3; i++) {
                if (res.absolute(i + 1)) {
                    date[i] = sdf.format(res.getDate(2));
                    amount[i] = res.getDouble(3);
                } else {
                    showNoHistory();
                    return;
                }
            }

            for (int i = 0; i < date.length; i++) {
                showHistory(i, date[i], amount[i]);
            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null,
                    e.getMessage(), "Error",
                    JOptionPane.INFORMATION_MESSAGE
            );
            System.exit(0);
        }
    }

    static void showHistory(int index, String date, double amount) {
        String stramount = "$ " + String.format("%.2f", amount);
        switch (index) {
            case 0:
                histpanel1.setBackground(WHITE);
                histicon1.setIcon(HISTICON);
                date1.setText(date);
                am1.setForeground(WHITE);
                am1.setText(stramount);
                break;
            case 1:
                histpanel2.setBackground(WHITE);
                histicon2.setIcon(HISTICON);
                date2.setText(date);
                am2.setForeground(WHITE);
                am2.setText(stramount);
                break;
            case 2:
                histpanel3.setBackground(WHITE);
                histicon3.setIcon(HISTICON);
                date3.setText(date);
                am3.setForeground(WHITE);
                am3.setText(stramount);
                break;
            default:
                break;
        }
    }

    static ImageIcon HISTICON;
    private static final Color WHITE = Color.white;
    private static final Color BLACK = Color.black;

    static void showNoHistory() {
        am2.setForeground(BLACK);
        am2.setText("No Transaction History");
    }
}
